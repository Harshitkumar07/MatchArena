name: CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [develop]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
      
      - name: Run tests
        run: npm test -- --coverage --watchAll=false
        env:
          CI: true
      
      - name: Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
      
      - name: Build application
        run: npm run build
        env:
          CI: true
          REACT_APP_ENV: test
          REACT_APP_FIREBASE_API_KEY: test-key
          REACT_APP_FIREBASE_AUTH_DOMAIN: test.firebaseapp.com
          REACT_APP_FIREBASE_DATABASE_URL: https://test.firebaseio.com
          REACT_APP_FIREBASE_PROJECT_ID: test-project
          REACT_APP_FIREBASE_STORAGE_BUCKET: test.appspot.com
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: 123456789
          REACT_APP_FIREBASE_APP_ID: test-app-id
      
      - name: Check bundle size
        run: |
          echo "Checking bundle size..."
          ls -lah build/static/js/
      
      - name: Archive build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/
          retention-days: 7

  functions-lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install functions dependencies
        run: |
          cd functions
          npm ci
      
      - name: Run functions linter
        run: |
          cd functions
          npm run lint
      
      - name: Run functions tests
        run: |
          cd functions
          npm test
        env:
          CI: true

  security-audit:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Run security checks
        run: |
          npm install -g snyk
          snyk test --severity-threshold=high || true
